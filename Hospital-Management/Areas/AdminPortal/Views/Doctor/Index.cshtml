@using Hospital_Management.Areas.AdminPortal.ViewModel
@using Hospital_Management.Models

@model PaginationVM<DoctorWithSpecialityVM>//////////////
@{
    ViewData["Title"] = "Doctors";
}

<h1>Index</h1>
<p class="display-3">All Doctors</p>
<div class="container">
    <div class="d-flex">
        <form  action="/adminportal/doctor/search" method="post">
            <div class="input-group me-auto">
                <input class="form-control" type="search" name="SearchString" acceptvalue="SearchString" placeholder="Search" />
                <select class="form-select" name="SearchProperty">
                    <option value="firstName">FirstName</option>
                    <option value="lastName">LastName</option>
                    <option value="workingDays">WorkingDays</option>
                    <option value="workingHours">WorkingHours</option>
                    <option value="speciality">Speciality</option>
                    <option value="startHour">StartHour</option>
                </select>
                <button class="btn btn-success" type="submit"><i class="bi bi-search"></i></button>
            </div>
        </form>
        <button class="btn btn-success ms-auto mb-1">
            <a class="text-white" style="text-decoration:none" href="/AdminPortal/doctor/Add">New</a>
        </button>
    </div>
    <table class="table table-bordered table-hover text-center align-middle">
        <thead>
            <tr>
                <th>ID</th>
                <th>FullName</th>
                <th>SpecialityId</th>
                <th>BirthDate</th>
                <th>Address</th>
                <th>Details</th>
                <th>Modify</th>
                <th>Remove</th>
            </tr>
        </thead>
        @foreach (var item in Model.Items)
        {
            <tr id="@item.DoctorId">
                <td>@item.DoctorId</td>
                <td>@item.FullName</td>
                <td>@item.SpecialityId</td>
                <td>@item.BirthDate</td>
                <td>@item?.Address</td>
  
                <td>
                    <button class="btn btn-primary">
                        <a class="text-white" style="text-decoration:none" href="/AdminPortal/Doctor/Details/@item?.DoctorId">Details</a>
                    </button>
                </td>
                <td>
                    <button class="btn btn-warning">
                        <a class="text-white" style="text-decoration:none" href="/AdminPortal/Doctor/Edit/@item?.DoctorId">Edit</a>
                    </button>
                </td>

                
                <td>
                    <button class="btn btn-danger" onclick="confirmDelete('@item?.DoctorId')">
                        Remove
                    </button>
                </td>
            </tr>
        }
    </table>
    <div class="d-flex justify-content-center">
        <nav>
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="/AdminPortal/Doctor/?page=@(Model.CurrentPage - 1)">Previous</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="/AdminPortal/Doctor?page=@i">@i</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="/AdminPortal/Doctor?page=@(Model.CurrentPage + 1)">Next</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link" href="#">Next</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>

<div id="deleteAlert" class="alert alert-dismissible fade fixed-bottom w-75 m-auto mb-2" role="alert">
</div>

<script>
    function confirmDelete(id) {
        if (confirm("Are you sure you want to delete this doctor?")) {
            fetch(`/AdminPortal/Doctor/Delete/${id}`, {
                method: "DELETE"
            })
                .then(response => {
                    // Check if the response status is 204 (No Content) or 200 (OK)
                    if (response.status === 201) {
                        return { status: 201, message: "Doctor deleted successfully." };
                    } else if (response.ok) {
                        return response.json().then(data => ({ status: response.status, message: data.message }));
                    } else {
                        return response.json().then(data => Promise.reject({ status: response.status, message: data.message }));
                    }
                })
                .then(data => notifyDeletion(id, data))
                .catch(error => notifyDeletion(id, { status: error.status || 500, message: error.message || "Failed to delete the doctor. Please try again." }));
        }
    }

    function notifyDeletion(id, data) {
        var notification = document.getElementById("deleteAlert");
        var row = document.getElementById(id);

        // Reset notification classes
        notification.classList.remove("alert-danger", "alert-success");

        // Handle notification based on status
        if (data.status !== 200 && data.status !== 204) {
            notification.classList.add("alert-danger");
        } else {
            notification.classList.add("alert-success");
            if (row) row.remove();  // Safely remove the row if it exists
        }

        // Safely set notification message
        notification.textContent = data.message;

        // Show notification for 3 seconds
        notification.classList.add("show");
        setTimeout(function () {
            notification.classList.remove("show");
        }, 3000);
    }
</script>


@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">